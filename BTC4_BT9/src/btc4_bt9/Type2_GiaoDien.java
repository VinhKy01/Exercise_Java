/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package btc4_bt9;

import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.awt.font.TextAttribute;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.text.Style;
import static javax.swing.text.StyleConstants.isBold;
import static javax.swing.text.StyleConstants.isItalic;

/**
 *
 * @author infov
 */
public class Type2_GiaoDien extends javax.swing.JFrame {

    /**
     * Creates new form Font
     */
    int style;
    Font font;
    public Type2_GiaoDien() {
        initComponents();
        if (ckbDam.isSelected()) {
            txtText.setFont(new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) indam));
        }
    }
    
    Font indam = new Font("Serif", Font.BOLD, 14);
    Font chuthuong = new Font("Serif", Font.PLAIN, 14);
    Font innghieng = new Font("Serif", Font.ITALIC, 14);
    Font f;
    Map<TextAttribute, Integer> fontAttributes = new HashMap<TextAttribute, Integer>();
    Boolean isBold=false,isItalic=false,isUnderline=false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtText = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        ckbGach = new javax.swing.JCheckBox();
        ckbNghien = new javax.swing.JCheckBox();
        ckbDam = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ckbGach.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ckbGach.setText("Gạch chân");
        ckbGach.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbGachStateChanged(evt);
            }
        });

        ckbNghien.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ckbNghien.setText("Chữ nghiêng");
        ckbNghien.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbNghienStateChanged(evt);
            }
        });

        ckbDam.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ckbDam.setText("Chữ đậm");
        ckbDam.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbDamStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ckbDam)
                .addGap(48, 48, 48)
                .addComponent(ckbNghien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addComponent(ckbGach)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbGach)
                    .addComponent(ckbNghien)
                    .addComponent(ckbDam))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtText)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtText, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckbDamStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbDamStateChanged
        Duyet();
    }//GEN-LAST:event_ckbDamStateChanged

    private void ckbNghienStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbNghienStateChanged
        Duyet();
    }//GEN-LAST:event_ckbNghienStateChanged

    private void ckbGachStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbGachStateChanged
        Duyet();
    }//GEN-LAST:event_ckbGachStateChanged
    
    void Duyet(){
        if(ckbDam.isSelected() && ckbNghien.isSelected()){
            style = Font.ITALIC + Font.BOLD ;
        }
        else if(ckbDam.isSelected()){
            style = Font.BOLD;
        }
        else if(ckbNghien.isSelected()){
            style = Font.ITALIC;
        }
        else{
            style = Font.PLAIN;
        }     
        font = new Font("Tahoma", style, 14);
        txtText.setFont(font);
        
        if(ckbGach.isSelected()){
            Map att = font.getAttributes();
            att.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
            txtText.setFont(font.deriveFont(att));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Font.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Font.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Font.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Font.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Type2_GiaoDien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckbDam;
    private javax.swing.JCheckBox ckbGach;
    private javax.swing.JCheckBox ckbNghien;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtText;
    // End of variables declaration//GEN-END:variables
}
